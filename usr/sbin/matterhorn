#!/bin/sh


prog="matterhorn"
config="/etc/${prog}/service.conf"
config_opt="/opt/${prog}/etc/service.conf"
pidfile="/var/run/${prog}.pid"


clean_felix_cache() {
	if [ -d "$FELIX_CACHE_DIR" ]
	then
		for bundle in `find "$FELIX_CACHE_DIR" -type f -name bundle.location | \
			xargs grep --files-with-match -e "file:" | sed -e s/bundle.location// `
		do
			rm -r $bundle
		done
	fi
}


stop_matterhorn() {
	[ ! -e $pidfile ] && return
	pid=`cat $pidfile`
	kill $pid
	ps p $pid &> /dev/null
	# Wait for termination
	while [ $? -eq 0 ]
	do
		sleep 1
		ps p $pid &> /dev/null
	done
	rm $pidfile
	return 0
}


if [ $# -ne 1 ] || ( [ "$1" != '--daemon' ] && \
	[ "$1" != '--interactive' ] && [ "$1" != '--quit' ] )
then
	echo "Usage: $0 [ --daemon | --interactive | --quit | --help ]"
	exit 0
fi

# Only root or $MATTERHORN_USER are allowed to start Matterhorn
[ `id -u` -ne 0 ] && echo "User '`id -un`' has insufficient privilege" && exit 4


# Stop Matterhorn if --quit is given
[ "$1" == "--quit" ] && stop_matterhorn && exit 0

# Check if Matterhorn is already running
[ -e $pidfile ] && [ -e /proc/`cat $pidfile`/ ] && \
	echo "Matterhorn already running" && exit 0

rm -f $pidfile


###
# The following is for the actual Matterhorn start
##

# Load default configuration
MATTERHORN=/opt/matterhorn
CA=$MATTERHORN/capture-agent
MATTERHORN_USER=matterhorn
IS_CA=false
LOGDIR=/opt/matterhorn/logs
LOGLEVEL="WARN"
ECLIPSE_LOGLEVEL="SEVERE"
[ -z $DEBUG ] && DEBUG=false
DEBUG_PORT="8000"
DEBUG_SUSPEND="n"
FELIX_CONFIG_DIR=/opt/matterhorn/etc
FELIX_WORK_DIR=/opt/matterhorn/work
FELIX_CACHE_DIR="$FELIX_WORK_DIR/felix-cache"

# Load configuration files
[ -e $config_opt ] && . $config_opt
[ -e $config ] && . $config

FELIX="-Dfelix.home=$MATTERHORN"
FELIX="${FELIX} -Dfelix.work=$FELIX_WORK_DIR"
FELIX="${FELIX} -Dfelix.config.properties=file:${FELIX_CONFIG_DIR}/config.properties"
FELIX="${FELIX} -Dfelix.system.properties=file:${FELIX_CONFIG_DIR}/system.properties"
FELIX="${FELIX} -Dfelix.fileinstall.dir=$FELIX_CONFIG_DIR/load"

# Configure Java Management Extensions (JMX) 
JMX="-Dcom.sun.management.jmxremote"
JMX="${JMX} -Dcom.sun.management.jmxremote"
JMX="${JMX} -Dcom.sun.management.jmxremote.port=1099"
JMX="${JMX} -Dcom.sun.management.jmxremote.authenticate=false"
JMX="${JMX} -Dcom.sun.management.jmxremote.ssl=false"

LOGGING="-Dopencast.logdir=$LOGDIR"
LOGGING="${LOGGING} -Dbundles.configuration.location=$FELIX_CONFIG_DIR"
LOGGING="${LOGGING} -Djava.util.logging.config.file=$FELIX_CONFIG_DIR/services/java.util.logging.properties"
LOGGING="${LOGGING} -Dorg.ops4j.pax.logging.DefaultServiceLog.level=${LOGLEVEL}"
LOGGING="${LOGGING} -Declipselink.logging.level=${ECLIPSE_LOGLEVEL}"

GRAPHICS="-Djava.awt.headless=true -Dawt.toolkit=sun.awt.HeadlessToolkit"
GRAPHICS="${GRAPHICS} -Djava.awt.headless=true -Dawt.toolkit=sun.awt.HeadlessToolkit"

JAVA="-Xms1024m -Xmx1024m -XX:MaxPermSize=256m"
[ "$1" == '--daemon' ] && GOSH="-Dgosh.args='--noshutdown -c noop=true'"

if $DEBUG
then
	DEBUG="-Xdebug"
	DEBUG="${DEBUG} -Xnoagent"
	DEBUG="${DEBUG} -Xrunjdwp:transport=dt_socket"
	DEBUG="${DEBUG},address=$DEBUG_PORT"
	DEBUG="${DEBUG},server=y"
	DEBUG="${DEBUG},suspend=$DEBUG_SUSPEND"
else
	DEBUG=""
fi

MATTERHORN_OPTS="$GOSH $DEBUG $FELIX $GRAPHICS $JAVA $LOGGING $JMX"

# Execute Capture-Agent device configuration
$IS_CA && $CA/device_config.sh

# Make sure matterhorn bundles are reloaded
clean_felix_cache

if [ "$1" == "--daemon" ]
then
	su -c "java $MATTERHORN_OPTS -jar $MATTERHORN/bin/felix.jar \
		$FELIX_CACHE_DIR &> /dev/null & echo \$! 1>&3" \
		$MATTERHORN_USER 3> $pidfile || exit 1
else
	su -c "/bin/sh -c \"set -o monitor; \
		java $MATTERHORN_OPTS -jar $MATTERHORN/bin/felix.jar \
		$FELIX_CACHE_DIR 3>&- & echo \\\$! 1>&3 && fg %% \"" \
		$MATTERHORN_USER 3> $pidfile
	stop_matterhorn
fi
