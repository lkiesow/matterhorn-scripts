#!/bin/sh
#
# matterhorn   Start/Stop the Opencast Matterhorn system
#
# chkconfig:   - 60 40
# description: Matterhorn is a free, open-source platform to support the \
#              management of educational audio and video content. Institutions \
#              will use Matterhorn to produce lecture recordings, manage \
#              existing video, serve designated distribution channels, and \
#              provide user interfaces to engage students with educational \
#              videos.

### BEGIN INIT INFO
# Provides: matterhorn
# Required-Start: $local_fs $remote_fs $syslog $network
# Short-Description: run matterhorn
# Description: Matterhorn is a free, open-source platform to support the
#              management of educational audio and video content. Institutions
#              will use Matterhorn to produce lecture recordings, manage
#              existing video, serve designated distribution channels, and
#              provide user interfaces to engage students with educational
#              videos.
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

matterhorn="/usr/sbin/matterhorn"
prog="matterhorn"
lockfile=/var/lock/subsys/$prog
pidfile="/var/run/${prog}.pid"

killdelay=7

# Load configuration files
[ -e /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog

start() {
	echo -n $"Starting $prog: "

	daemon --check $prog $matterhorn --daemon
	retval=$?
	echo
	[ $retval -eq 0 ] && touch $lockfile
	return $retval
}

stop() {
	echo -n $"Stopping $prog: "
	killproc -p $pidfile -d $killdelay $prog
	retval=$?
	echo
	[ $retval -eq 0 ] && rm -f $lockfile
	return $retval
}

restart() {
	stop
	start
}

reload() {
	restart
}

force_reload() {
	restart
}

rh_status() {
	# run checks to determine if the service is running or use generic status
	status $prog
}

rh_status_q() {
	rh_status >/dev/null 2>&1
}


case "$1" in
	start)
		rh_status_q && exit 0
		$1
		;;
	stop)
		rh_status_q || exit 0
		$1
		;;
	restart)
		$1
		;;
	reload)
		rh_status_q || exit 7
		$1
		;;
	force-reload)
		force_reload
		;;
	status)
		rh_status
		;;
	condrestart|try-restart)
		rh_status_q || exit 0
		restart
		;;
	*)
		echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
		exit 2
esac
exit $?
